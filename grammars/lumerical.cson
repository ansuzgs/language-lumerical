'scopeName': 'source.lumerical'
'name': 'Lumerical'
'fileTypes': ['lsf']

'patterns': [
  {
    'comment': 'exponential'
    'match': '\\b[-+]?[0-9]+\.?[0-9]+([eE][-+]?[0-9]+)?\\b'
    'name': 'constant.numeric.lumerical'
  }
  {
    'comment': 'Integers'
    'match': '\\b((0x[0-9a-fA-F]+)|(0[0-7]+i?)|(\\d+([Ee]\\d+)?i?)|(\\d+[Ee][\-\+]\\d+i?))\\b'
    'name': 'constant.numeric.integer.lumerical'
  }
  {
    "match": "#.*$"
    "name": "comment.line"
  }
  {
    'begin': '\''
    'end': '\''
    'name': 'string.quoted.single.lumerical'
  }
  {
    'begin': '\"'
    'end': '\"'
    'name': 'string.quoted.double.lumerical'
  }
  {
    'comment': 'keywords that delimit loops'
    'name': 'keyword.control.repeat.lumerical'
    'match': '\\b(for|while)\\b(?=\\()'
  }
  {
    'comment': 'keywords that delimit flow conditionals'
    'name': 'keyword.control.conditional.lumerical'
    'match': '\\b(if|else)\\b(?=\\()'
  }
  {
    'comment': 'Built-in functions'
    'match': '\\b(set|getresult|write|num2str|select|length)\\b(?=\\()'
    'name': 'support.function.builtin.lumerical'
  }
  {
    'comment': 'keywords run simulation & switch mode'
    'name': 'keyword.simulation.lumerical'
    'match': '\\b(run|switchtolayout)\\b'
  }
]
